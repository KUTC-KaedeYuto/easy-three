(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[231],{99183:function(e,r,i){Promise.resolve().then(i.bind(i,85498))},72824:function(e,r,i){"use strict";var s=i(56800),n=i.n(s),l=i(2265),c=i(72574),d=i(57437);let t=l.forwardRef((e,r)=>{let{bsPrefix:i,fluid:s=!1,as:l="div",className:t,...h}=e,x=(0,c.vE)(i,"container");return(0,d.jsx)(l,{ref:r,...h,className:n()(t,s?"".concat(x).concat("string"==typeof s?"-".concat(s):"-fluid"):x)})});t.displayName="Container",r.Z=t},72574:function(e,r,i){"use strict";i.d(r,{pi:function(){return t},vE:function(){return d},zG:function(){return h}});var s=i(2265);i(57437);let n=s.createContext({prefixes:{},breakpoints:["xxl","xl","lg","md","sm","xs"],minBreakpoint:"xs"}),{Consumer:l,Provider:c}=n;function d(e,r){let{prefixes:i}=(0,s.useContext)(n);return e||i[r]||r}function t(){let{breakpoints:e}=(0,s.useContext)(n);return e}function h(){let{minBreakpoint:e}=(0,s.useContext)(n);return e}},85498:function(e,r,i){"use strict";i.r(r),i.d(r,{default:function(){return t}});var s=i(57437),n=i(72824),l=i(90145),c=i.n(l),d=i(56572);function t(){return(0,s.jsxs)(n.Z,{className:"pt-4 pb-5",children:[(0,s.jsx)("title",{children:"Reference | easy-three"}),(0,s.jsx)("h1",{children:"Reference"}),(0,s.jsx)("h2",{children:"Functions"}),(0,s.jsxs)("div",{className:c().reference,children:[(0,s.jsxs)("h3",{children:["init(target : String | DOMElement) : ",(0,s.jsx)("span",{children:"Object"})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{children:(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{children:"target"}),"(optional) - 描画対象のDOMセレクター、もしくはDOM要素 (デフォルト : document.body)。"]})}),"初期化関数。",(0,s.jsx)("br",{}),"指定されたターゲットに対して、シーン、カメラ、レンダラー、コントロールを初期化します。",(0,s.jsx)("br",{}),"ウィンドウサイズ変更時の自動リサイズに対応。"]}),(0,s.jsxs)("h3",{children:["create.object(geometry : String, props : Object) : ",(0,s.jsx)("span",{children:"Mesh"})]}),(0,s.jsxs)("div",{children:[(0,s.jsxs)("div",{children:[(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{children:"geometry"}),"- 作成するジオメトリのタイプ。",(0,s.jsx)("br",{}),'"BoxGeometry", "SphereGeometry", "PlaneGeometry" など。']}),(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{children:"props"}),"- 設定オブジェクト。",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:"size (Array | Number) : サイズ (デフォルト : [1, 1, 1]、ジオメトリによって次元は異なる)。"}),(0,s.jsx)("li",{children:"position (Array) : 位置 (デフォルト : [0, 0, 0])。"}),(0,s.jsx)("li",{children:"rotation (Array) : 回転 (デフォルト : [0, 0, 0])。"}),(0,s.jsxs)("li",{children:["option (Object) : オプション (デフォルト :"," ","{color: 0xffffff }",")。"]}),(0,s.jsx)("li",{children:'material (String) : マテリアルタイプ (デフォルト : "Physical")。'}),(0,s.jsx)("li",{children:"castShadow (Boolean) : 別のオブジェクトに影を落とすかどうか (デフォルト : true)。"}),(0,s.jsx)("li",{children:"receiveShadow (Boolean) : 別のオブジェクトからの影を受けるかどうか (デフォルト : true)。"}),(0,s.jsx)("li",{children:"autoAdd (Boolean) : 自動でシーンに追加 (デフォルト : true)。"})]})]})]}),"ジオメトリを作成し、メッシュを返します。",(0,s.jsx)("br",{})]}),(0,s.jsxs)("h3",{children:[(0,s.jsx)(d.r,{href:"/reference/create_cube/",children:"create.cube"}),"(props : Object) : ",(0,s.jsx)("span",{children:"Mesh"})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{children:(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{children:"props"})," - 設定オブジェクト。",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:"size (Array | Number) : サイズ (デフォルト : [1, 1, 1])。"}),(0,s.jsx)("li",{children:"position (Array) : 位置 (デフォルト : [0, 0, 0])。"}),(0,s.jsx)("li",{children:"rotation (Array) : 回転 (デフォルト : [0, 0, 0])。"}),(0,s.jsxs)("li",{children:["option (Object) : オプション (デフォルト :"," ","{color: 0x1155ff }",")。"]}),(0,s.jsx)("li",{children:'material (String) : マテリアルタイプ (デフォルト : "Physical")。'}),(0,s.jsx)("li",{children:"castShadow (Boolean) : 別のオブジェクトに影を落とすかどうか (デフォルト : true)。"}),(0,s.jsx)("li",{children:"receiveShadow (Boolean) : 別のオブジェクトからの影を受けるかどうか (デフォルト : true)。"}),(0,s.jsx)("li",{children:"autoAdd (Boolean) : 自動でシーンに追加 (デフォルト : true)。"})]})]})}),"キューブ (立方体) を作成してシーンに追加します。"]}),(0,s.jsxs)("h3",{children:["create.sphere(props : Object) : ",(0,s.jsx)("span",{children:"Mesh"})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{children:(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{children:"props"})," - 設定オブジェクト。",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:"size (Array | Number) : 半径 (デフォルト : 1)。"}),(0,s.jsx)("li",{children:"position (Array) : 位置 (デフォルト : [0, 0, 0])。"}),(0,s.jsx)("li",{children:"rotation (Array) : 回転 (デフォルト : [0, 0, 0])。"}),(0,s.jsxs)("li",{children:["option (Object) : オプション (デフォルト :"," ","{color: 0x1155ff }",")。"]}),(0,s.jsx)("li",{children:'material (String) : マテリアルタイプ (デフォルト : "Physical")。'}),(0,s.jsx)("li",{children:"castShadow (Boolean) : 別のオブジェクトに影を落とすかどうか (デフォルト : true)。"}),(0,s.jsx)("li",{children:"receiveShadow (Boolean) : 別のオブジェクトからの影を受けるかどうか (デフォルト : true)。"}),(0,s.jsx)("li",{children:"autoAdd (Boolean) : 自動でシーンに追加 (デフォルト : true)。"})]})]})}),"球体を作成してシーンに追加します。"]}),(0,s.jsxs)("h3",{children:["create.plane(props : Object) : ",(0,s.jsx)("span",{children:"Mesh"})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{children:(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{children:"props"})," - 設定オブジェクト。",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:"size (Array | Number) : サイズ (デフォルト : [1, 1])。"}),(0,s.jsx)("li",{children:"position (Array) : 位置 (デフォルト : [0, 0, 0])。"}),(0,s.jsx)("li",{children:"rotation (Array) : 回転 (デフォルト : [0, 0, 0])。"}),(0,s.jsxs)("li",{children:["option (Object) : オプション (デフォルト :"," ","{color: 0x1155ff }",")。"]}),(0,s.jsx)("li",{children:'material (String) : マテリアルタイプ (デフォルト : "Physical")。'}),(0,s.jsx)("li",{children:"castShadow (Boolean) : 別のオブジェクトに影を落とすかどうか (デフォルト : true)。"}),(0,s.jsx)("li",{children:"receiveShadow (Boolean) : 別のオブジェクトからの影を受けるかどうか (デフォルト : true)。"}),(0,s.jsx)("li",{children:"autoAdd (Boolean) : 自動でシーンに追加 (デフォルト : true)。"})]})]})}),"平面を作成してシーンに追加します。"]}),(0,s.jsxs)("h3",{children:["create.group(props : Object) : ",(0,s.jsx)("span",{children:"Group"})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{children:(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{children:"props"})," - 設定オブジェクト。",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:"position (Array) : 位置 (デフォルト : [0, 0, 0])。"}),(0,s.jsx)("li",{children:"rotation (Array) : 回転 (デフォルト : [0, 0, 0])。"}),(0,s.jsx)("li",{children:"children (Array<Object3D>) : 子要素の配列 (デフォルト : [])"}),(0,s.jsx)("li",{children:"autoAdd (Boolean) : 自動でシーンに追加 (デフォルト : true)。"})]})]})}),"グループを作成してシーンに追加します。引数で最初に追加する子要素を指定できます。"]}),(0,s.jsxs)("h3",{children:["create.ambientLight(props : Object) : ",(0,s.jsx)("span",{children:"Light"})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{children:(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{children:"props"})," - 設定オブジェクト。",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:"color (Hex) : ライトの色 (デフォルト : 0xffffff)。"}),(0,s.jsx)("li",{children:"intensity (Number) : 光の強さ (デフォルト : 0.5)。"})]})]})}),"環境光を作成してシーンに追加します。"]}),(0,s.jsxs)("h3",{children:["create.pointLight(props : Object) : ",(0,s.jsx)("span",{children:"Light"})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{children:(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{children:"props"})," - 設定オブジェクト。",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:"color (Hex) : ライトの色 (デフォルト : 0xffffff)。"}),(0,s.jsx)("li",{children:"intensity (Number) : 光の強さ (デフォルト : 1)。"}),(0,s.jsx)("li",{children:"distance (Number) : ライトの距離 (デフォルト : 0)。"}),(0,s.jsx)("li",{children:"decay (Number) : 光の減衰率 (デフォルト : 2)。"}),(0,s.jsx)("li",{children:"position (Array) : 位置 (デフォルト : [6, 6, 6])。"}),(0,s.jsx)("li",{children:"castShadow (Boolean) : 影を投影するかどうか (デフォルト : true)。"}),(0,s.jsx)("li",{children:"shadow (Object) : シャドウの設定。"})]})]})}),"点光源を作成してシーンに追加します。"]}),(0,s.jsxs)("h3",{children:["create.directionalLight(props : Object) : ",(0,s.jsx)("span",{children:"Light"})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{children:(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{children:"props"})," - 設定オブジェクト。",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:"intensity (Number) : 光の強さ (デフォルト : 1)。"}),(0,s.jsx)("li",{children:"color (Hex) : ライトの色 (デフォルト : 0xffffff)。"}),(0,s.jsx)("li",{children:"position (Array) : ライトの位置 (デフォルト : [10, 10, 10])。"}),(0,s.jsx)("li",{children:"castShadow (Boolean) : 影を投影するかどうか (デフォルト : true)。"}),(0,s.jsxs)("li",{children:["shadow (Object) : シャドウの設定。",(0,s.jsxs)("ul",{children:[(0,s.jsxs)("li",{children:["mapSize (Object) : シャドウマップのサイズ (デフォルト :"," ","{width: 1024, height: 1024 }",")。"]}),(0,s.jsxs)("li",{children:["camera (Object) : シャドウカメラの設定。",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:"left (Number) : カメラの左範囲 (デフォルト : -10)。"}),(0,s.jsx)("li",{children:"right (Number) : カメラの右範囲 (デフォルト : 10)。"}),(0,s.jsx)("li",{children:"top (Number) : カメラの上範囲 (デフォルト : 10)。"}),(0,s.jsx)("li",{children:"bottom (Number) : カメラの下範囲 (デフォルト : -10)。"})]})]})]})]})]})]})}),"平行光源を作成してシーンに追加します。"]}),(0,s.jsxs)("h3",{children:["helper.grid(props : Object) : ",(0,s.jsx)("span",{children:"GridHelper"})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{children:(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{children:"props"})," - 設定オブジェクト。",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:"size (Number) : グリッドのサイズ (デフォルト : 10)。"}),(0,s.jsx)("li",{children:"divisions (Number) : 分割数 (デフォルト : 10)。"}),(0,s.jsx)("li",{children:"colorCenterLine (Hex) : 中心線の色 (デフォルト : 0x444444)。"}),(0,s.jsx)("li",{children:"colorGrid (Hex) : グリッド線の色 (デフォルト : 0x888888)。"})]})]})}),"グリッドヘルパーを作成してシーンに追加します。"]}),(0,s.jsxs)("h3",{children:["helper.axes(props : Object) : ",(0,s.jsx)("span",{children:"AxesHelper"})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{children:(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{children:"props"})," - 設定オブジェクト。",(0,s.jsx)("ul",{children:(0,s.jsx)("li",{children:"size (Number) : 軸ヘルパーのサイズ (デフォルト : 10)。"})})]})}),"軸ヘルパーを作成してシーンに追加します。"]}),(0,s.jsxs)("h3",{children:["load.vrm(url : String, props : Object) : ",(0,s.jsx)("span",{children:"VRM"})]}),(0,s.jsxs)("div",{children:[(0,s.jsxs)("div",{children:[(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{children:"url"})," - VRMモデルのURL。"]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{children:"props"})," - 設定オブジェクト。",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:"position (Array) : モデルの位置 (デフォルト : [0, 0, 0])。"}),(0,s.jsx)("li",{children:"rotation (Array) : モデルの回転 (デフォルト : [0, 0, 0])。"}),(0,s.jsx)("li",{children:"scale (Array) : モデルのスケール (デフォルト : [1, 1, 1])。"}),(0,s.jsx)("li",{children:"autoAdd (Boolean) : 自動でシーンに追加するか (デフォルト : true)。"})]})]})]}),"VRMモデルを読み込み、オプションに基づいてシーンに追加します。"]}),(0,s.jsxs)("h3",{children:["animate(proc : Function) : ",(0,s.jsx)("span",{children:"undefined"})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{children:(0,s.jsxs)("div",{children:[(0,s.jsxs)("span",{children:["proc(","{ clock, delta }",")"]})," - 各フレームごとに実行される関数。",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:"clock (THREE.Clock) : フレーム間の時間を管理するオブジェクト。"}),(0,s.jsx)("li",{children:"delta (Number) : 前回のフレームからの経過時間（秒単位）。"})]})]})}),"アニメーションループを開始します。",(0,s.jsx)("br",{}),"指定した関数を各フレームごとに実行し、レンダリングを行います。"]}),(0,s.jsxs)("h3",{children:["load.background(url : String) : ",(0,s.jsx)("span",{children:"undefined"})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{children:(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{children:"url"})," - 背景テクスチャのURL。"]})}),"指定されたHDR形式の画像をロードし、シーンの背景と環境マップに設定します。"]}),(0,s.jsxs)("h3",{children:["load.texture(url : String, props : Object) : ",(0,s.jsx)("span",{children:"Texture"})]}),(0,s.jsxs)("div",{children:[(0,s.jsxs)("div",{children:[(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{children:"url"})," - テクスチャのURL。"]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{children:"props"})," - 設定オブジェクト。",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:'wrapS (number) : テクスチャのラッピングモード (デフォルト : "Repeat")。'}),(0,s.jsx)("li",{children:'wrapT (number) : テクスチャのラッピングモード (デフォルト : "Repeat")。'}),(0,s.jsx)("li",{children:"repeat (Array) : テクスチャの繰り返し回数 (デフォルト : [1, 1])。"})]})]})]}),"指定された画像をロードし、テクスチャを作成します。",(0,s.jsx)("br",{}),'テクスチャの繰り返しを有効にするには、wrapSおよびwrapTを "Repeat" または "MirroredRepeat" に設定する必要があります。']})]})]})}},56572:function(e,r,i){"use strict";i.d(r,{r:function(){return l}});var s=i(57437),n=i(87138);function l(e){let{href:r="",locale:i="/easy-three",children:l,...c}=e;return(0,s.jsx)(n.default,{...c,href:r,locale:i,children:l})}},90145:function(e){e.exports={reference:"Reference_reference__OJFGU"}},56800:function(e,r){var i;/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/!function(){"use strict";var s={}.hasOwnProperty;function n(){for(var e="",r=0;r<arguments.length;r++){var i=arguments[r];i&&(e=l(e,function(e){if("string"==typeof e||"number"==typeof e)return e;if("object"!=typeof e)return"";if(Array.isArray(e))return n.apply(null,e);if(e.toString!==Object.prototype.toString&&!e.toString.toString().includes("[native code]"))return e.toString();var r="";for(var i in e)s.call(e,i)&&e[i]&&(r=l(r,i));return r}(i)))}return e}function l(e,r){return r?e?e+" "+r:e+r:e}e.exports?(n.default=n,e.exports=n):void 0!==(i=(function(){return n}).apply(r,[]))&&(e.exports=i)}()}},function(e){e.O(0,[611,138,971,23,744],function(){return e(e.s=99183)}),_N_E=e.O()}]);